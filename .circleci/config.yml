version: 2.1

base_config: &base_config
  docker:
    - image: cimg/node:16.18.0
  working_directory: ~/project

orbs:
  aws-cli: circleci/aws-cli@1.0
  serverless: circleci/serverless-framework@1.0

jobs:
  install-dependencies:
    <<: *base_config
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            # "package.json" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Instalando dependÃªncias...
          command: yarn install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  build:
    <<: *base_config
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Buildando o projeto...
          command: yarn build
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  test:
    <<: *base_config

    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Rodando os testes...
          command: yarn test

  deploy-production:
    executor: serverless/default
    steps:
      - attach_workspace:
          at: ~/project

      - aws-cli/setup
      - serverless/setup
      - run: yarn install --production --cwd dist
      # Build Lambda's Layer nodejs package
      - run: cd dist && mkdir tmp && cp -r node_modules package.json src tmp && mv tmp nodejs
      - run: sls deploy

workflows:
  build-test-deploy:
    jobs:
      - install-dependencies
      - build:
          requires:
            - install-dependencies
      - test:
          requires:
            - build
      - deploy-production:
          requires:
            - test
          # filters:
          #   branches:
          #     only: main
      
